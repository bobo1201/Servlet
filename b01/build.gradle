// 1. buildscript 추가(Querydsl 사용 목적)
buildscript{
    ext{
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // 테스트에서 lombok 사용할 수 있도록 추가
    testCompileOnly 'org.projectlombok:lombok:'
    testAnnotationProcessor 'org.projectlombok:lombok:'
    
    // thymeleaf의 <th:block>을 이용하면 레이아웃을 만들고 특정한 페이지에서는 필요한 부분만 작성하는 방식으로 개발 가능
    // 레이아웃 기능을 위한 라이브러리 추가
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'


    // 2. Querydsl 관련 라이브러리 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    annotationProcessor(
        "javax.persistence:javax.persistence-api",
        "javax.annotation:javax.annotation-api",
        "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    // ModelMapper 이용
    implementation 'org.modelmapper:modelmapper:3.1.0'

    // 타임리프 레이아웃 관련 라이브러리 추가
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'

    // @Valid 이용
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // SWAGGER UI MAVEN 추가
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // 파일 용량 줄이기 위해 사용
    implementation 'net.coobird:thumbnailator:0.4.16'

    // 스프링 시큐리티 관련 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // 타임리프 인증 정보 처리하기 위해 타임리프 스프링 시큐리티 사용 라이브러리 추가
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

}

// 단위 테스트가 작성되지 않았는데 빌드가 되면서 난 에러임
//tasks.named('test') {
//    useJUnitPlatform()
//}




// 해당 부분 주석처리하니 오류가 나타나지 않음
// 3. Querydsl 관련 부분 추가 작성
//sourceSets {
//    main{
//        java{
//            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
//        }
//    }
//}

//def generated = 'src/main/generated'
